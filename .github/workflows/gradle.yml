# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build and Test

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Create Build Directory
      run: mkdir ./build

    - name: Replace Version in Gradle Build
      run: sed -i 's/__MODULE_VERSION__/${{ github.event.inputs.version }}/g' ./build.gradle.kts

    - name: Download JKS Cert Store
      run: |
        echo "${{ secrets.KYVIS_PFX }}" | base64 --decode > ./build/kyvis.pfx
    
    - name: Download P7B Chain
      run: |
        echo "${{ secrets.KYVIS_P7B }}" > ./build/kyvis.p7b

    - name: Download Sign Props
      run: |
        echo "${{ secrets.KYVIS_PASS }}" >> ./gradle.properties

    - name: Add minimatch
      run: yarn add --dev @types/minimatch

    - name: Build with Gradle Wrapper
      run: ./gradlew signModule

    - name: Add Version to Signed Module
      run: mv ./build/apexcharts.modl ./build/ApexCharts-${{ github.event.inputs.version }}.modl

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Module
        path: ./build/ApexCharts-${{ github.event.inputs.version }}.modl
